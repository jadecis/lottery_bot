from aiogram.types import Message, CallbackQuery
from loader import dp, bot, html, db, User
from aiogram.dispatcher.filters import CommandStart, Text
from aiogram.dispatcher import FSMContext
from src.keyboards.reply import main_menu
from src.keyboards.inline import lottery_menu, buy_menu, payment_menu, edit_menu
from config import YOOMONEY_TOKEN, YOOMONEY_WALLET, admin_chat
from yoomoney import Quickpay, Client
import uuid

@dp.message_handler(CommandStart(), state="*")
async def start_command(msg: Message, state: FSMContext):
    await state.finish()
    await msg.answer("–ü—Ä–∏–≤–µ—Ç!", parse_mode=html,
                     reply_markup=main_menu)

@dp.message_handler(Text(['üéü –ê–∫—Ç–∏–≤–Ω—ã–µ –ª–æ—Ç–µ—Ä–µ–∏', '‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å']), state="*")
async def text_handler(msg: Message, state: FSMContext):
    user= db.get_user(msg.chat.id)
    if msg.text == '‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å':
        if user:
             await msg.answer(f"<b>ID:</b> <code>{user[1]}</code>\n"
                              +f"<b>Username:</b> <code>{user[2]}</code>\n"
                              +f"<b>–ò–º—è:</b> <code>{user[3]}</code>\n"
                              +f"<b>–§–∞–º–∏–ª–∏—è:</b> <code>{user[4]}</code>\n"
                              +f"<b>–û—Ç—á–µ—Å—Ç–≤–æ:</b> <code>{user[5]}</code>\n"
                              +f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> <code>{user[6]}</code>\n",
                              parse_mode=html,
                              reply_markup=edit_menu)
        else:
            await msg.answer("<b>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. "
                            +f"–ü—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–π –Ω–∞ –º–æ–∏ –≤–æ–ø—Ä–æ—Å—ã\n\n"
                            +f"–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª</b>\n"
                            +f"<i>–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>",
                            parse_mode=html)
            await User.name.set()
    else:
        if user:
            if db.get_lotteries():
                await msg.answer('–í—ã–±–∏—Ä–∞–π –ª–æ—Ç–µ—Ä–µ—é:', reply_markup=lottery_menu())
            else:
                await msg.answer('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ª–æ—Ç–µ—Ä–µ–π')
        else:
            await msg.answer("<b>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ—Ç–µ—Ä–µ–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. "
                            +f"–ü—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–π –Ω–∞ –º–æ–∏ –≤–æ–ø—Ä–æ—Å—ã\n\n"
                            +f"–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª</b>\n"
                            +f"<i>–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>",
                            parse_mode=html)
            await User.name.set()

@dp.callback_query_handler(text='edit')
async def edit_handler(call: CallbackQuery, state: FSMContext):
    await call.message.edit_text(f"<b>–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª</b>\n"
                            +f"<i>–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>",
                            parse_mode=html)
    await User.name.set()

@dp.message_handler(content_types='text', state=User.name)
async def name_hand(msg: Message, state: FSMContext):
    await state.update_data(name= msg.text)
    await msg.answer(f"–ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:")
    await User.number.set()
    
@dp.message_handler(content_types='text', state=User.number)
async def number_hand(msg: Message, state: FSMContext):
    data= await state.get_data()
    full= data.get('name').split()
    if db.get_user(msg.chat.id):
        db.up_user(
            user_id=msg.chat.id,
            username=msg.chat.username,
            name=full[1],
            lastname=full[0],
            patronymic=full[2],
            number=msg.text)
    else:
        db.add_user(
            user_id=msg.chat.id,
            username=msg.chat.username,
            name=full[1],
            lastname=full[0],
            patronymic=full[2],
            number=msg.text)
    await msg.answer('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫–æ–Ω—á–µ–Ω–∞.\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å¬ª')
    await state.finish()

@dp.callback_query_handler(text_contains='lot_')
async def lot_hadler(call: CallbackQuery, state: FSMContext):
    table_name= call.data.replace('lot_', '')
    info= db.get_lottery(table_name)
    sold=db.count_notSold(table_name)[0]
    if sold != 0:
        await call.message.edit_text(f'<b>–õ–æ—Ç–µ—Ä–µ—è {info[1]}</b>\n'
                              +f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤:</b> <code>{info[3]}</code>\n"
                              +f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ —Ä–∞—Å–ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤:</b> <code>{sold}</code>\n"
                              +f"<b>–¶–µ–Ω–∞ 1 –±–∏–ª–µ—Ç–∞:</b> <code>{info[4]} ‚ÇΩ\n</code>", 
                              parse_mode=html, 
                              reply_markup=buy_menu(table_name))
    else:
        await call.message.edit_text(f"<b>–ë–∏–ª–µ—Ç–æ–≤ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏!</b>", parse_mode=html)
    
@dp.callback_query_handler(text_contains='buy_')
async def lot_hadler(call: CallbackQuery, state: FSMContext):
    table_name= call.data.replace('buy_', '')
    await state.update_data(table_name=table_name)
    info= db.get_lottery(table_name)
    bill_id= str(call.message.chat.id) + table_name
    bill = Quickpay(
        receiver=YOOMONEY_WALLET,
        quickpay_form='shop',
        targets='Photo bot',
        paymentType='SB',
        sum=info[4],
        label=bill_id)
    await call.message.edit_text(text=f"üìç <b>–°—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã –≥–æ—Ç–æ–≤</b> üìç\n\n"
                             +f"<i>–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üí≥\n\n"
                             +f"<b>‚ùóÔ∏è –°—á–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω —Ç–æ–ª—å–∫–æ 1 —á–∞—Å</b> ‚ùóÔ∏è\n"
                             +f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂¬ª, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞</i>", 
                             reply_markup=payment_menu(url=bill.redirected_url, bill_id=bill_id),
                             parse_mode=html)
    
@dp.callback_query_handler(text_contains='checkbill_')
async def lot_hadler(call: CallbackQuery, state: FSMContext):
    bill_id= call.data.replace('checkbill_', '')
    table_name= bill_id.replace(f'{call.message.chat.id}', '')
    client = Client(YOOMONEY_TOKEN)
    try:
        history = client.operation_history(label=bill_id)
        result= history.operations[-1]
        result=result.status
        if result== 'PAID' or result == 'success' or result == 'paid':
            ticket_id= db.get_ticket(table_name)[0]
            user= db.get_user(call.message.chat.id)
            db.up_ticket(
                table_name=table_name,
                user_id= int(user[1]),
                username=user[2],
                name=user[3],
                lastname=user[4],
                patronymic=user[5],
                number=user[6],
                id=ticket_id
            )
            await call.message.edit_text(f"""
<b>‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–æ–±—Ä–µ–ª–∏ –±–∏–ª–µ—Ç –Ω–∞ –ª–æ—Ç–µ—Ä–µ—é <i>{db.get_lottery(table_name)[1]}</i>
üî¢ –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –±–∏–ª–µ—Ç–∞:</b> ‚Ññ<code>{ticket_id}</code>

–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!""", parse_mode=html)
            if not(db.get_ticket(table_name)):
                await bot.send_message(chat_id=admin_chat, text=f'–ë–∏–ª–µ—Ç—ã –∏–∑ –ª–æ—Ç–µ—Ä–µ–∏ {db.get_lottery(table_name)[1]} —Ä–∞—Å–∫—É–ø–ª–µ–Ω—ã!')
    except Exception as ex:
        print(ex)
        await bot.answer_callback_query(call.id, "‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞!\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!", show_alert=True)
        